{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/flashlight/index.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;OACnC,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,oBAAoB;AAEpD;;;;;;;;;;;;;;;;;;GAkBG;AASH;IAAA;IA8CA,CAAC;IA5CC;;;OAGG;IAEH,8BAAS,GAAT,cAAgC,MAAM,CAAC,CAAC,CAAC;IAEzC;;;OAGG;IAEH,6BAAQ,GAAR,cAA+B,MAAM,CAAC,CAAC,CAAC;IAExC;;;OAGG;IAEH,8BAAS,GAAT,cAAgC,MAAM,CAAC,CAAC,CAAC;IAEzC;;;OAGG;IAEH,2BAAM,GAAN,cAAyB,MAAM,CAAC,CAAC,CAAC;IAGlC;;;OAGG;IAIH,iCAAY,GAAZ,cAA0B,MAAM,CAAC,CAAC,CAAC;IAE9B,qBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,yBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAvCA;QAAC,OAAO,EAAE;;;;+CAAA;IAOV;QAAC,OAAO,EAAE;;;;8CAAA;IAOV;QAAC,OAAO,EAAE;;;;+CAAA;IAOV;QAAC,OAAO,EAAE;;;;4CAAA;IAQV;QAAC,OAAO,CAAC;YACP,IAAI,EAAE,IAAI;SACX,CAAC;;;;kDAAA;IA7CJ;QAAC,MAAM,CAAC;YACN,UAAU,EAAE,YAAY;YACxB,MAAM,EAAE,2BAA2B;YACnC,SAAS,EAAE,2BAA2B;YACtC,IAAI,EAAE,kEAAkE;YACxE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,iBAAiB,CAAC;SACjD,CAAC;;kBAAA;IAgDF,iBAAC;AAAD,CAAC,AA9CD,IA8CC","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin } from '@ionic-native/core';\r\n\r\n/**\r\n * @name Flashlight\r\n * @description This plugin allows you to switch the flashlight / torch of the device on and off.\r\n *\r\n * Requires Cordova plugin: `cordova-plugin-flashlight`. For more info, please see the [Flashlight plugin docs](https://github.com/EddyVerbruggen/Flashlight-PhoneGap-Plugin).\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { Flashlight } from '@ionic-native/flashlight';\r\n *\r\n * constructor(private flashlight: FlashLight) { }\r\n *\r\n * ...\r\n *\r\n * this.flashlight.switchOn();\r\n *\r\n *\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'Flashlight',\r\n  plugin: 'cordova-plugin-flashlight',\r\n  pluginRef: 'window.plugins.flashlight',\r\n  repo: 'https://github.com/EddyVerbruggen/Flashlight-PhoneGap-Plugin.git',\r\n  platforms: ['Android', 'iOS', 'Windows Phone 8']\r\n})\r\n\r\nexport class Flashlight {\r\n\r\n  /**\r\n   * Checks if the flashlight is available\r\n   * @returns {Promise<boolean>} Returns a promise that resolves with a boolean stating if the flashlight is available.\r\n   */\r\n  @Cordova()\r\n  available(): Promise<boolean> { return; }\r\n\r\n  /**\r\n   * Switches the flashlight on\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  @Cordova()\r\n  switchOn(): Promise<boolean> { return; }\r\n\r\n  /**\r\n   * Switches the flashlight off\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  @Cordova()\r\n  switchOff(): Promise<boolean> { return; }\r\n\r\n  /**\r\n   * Toggles the flashlight\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova()\r\n  toggle(): Promise<any> { return; }\r\n\r\n\r\n  /**\r\n   * Checks if the flashlight is turned on.\r\n   * @returns {boolean}\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  isSwitchedOn(): boolean { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}